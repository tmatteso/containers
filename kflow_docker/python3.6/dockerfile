FROM tmatteso/ye-lab-ucsf:base

USER root
# args - software versions
ARG MINIFORGE_ARCH="x86_64"
 # renovate: datasource=github-tags depName=conda-forge/miniforge versioning=loose
ARG MINIFORGE_VERSION=4.10.1-4
ARG PIP_VERSION=21.1.2
ARG PYTHON_VERSION=3.6.5
#8.10

# setup environment for conda
ENV CONDA_DIR /opt/conda
ENV PATH "${CONDA_DIR}/bin:${PATH}"
RUN mkdir -p ${CONDA_DIR} \
 && chown -R ${NB_USER}:users ${CONDA_DIR}
# make it use bash instead of sh by default
#RUN ln -sf /bin/bash /bin/sh

USER $NB_UID

# install - conda, pip, python
RUN curl -sL "https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/Miniforge3-${MINIFORGE_VERSION}-Linux-${MINIFORGE_ARCH}.sh" -o /tmp/Miniforge3.sh 
RUN curl -sL "https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/Miniforge3-${MINIFORGE_VERSION}-Linux-${MINIFORGE_ARCH}.sh.sha256" -o /tmp/Miniforge3.sh.sha256 
RUN echo "$(cat /tmp/Miniforge3.sh.sha256 | awk '{ print $1; }') /tmp/Miniforge3.sh" | sha256sum --check \
 && rm /tmp/Miniforge3.sh.sha256 \
 && /bin/bash /tmp/Miniforge3.sh -b -f -p ${CONDA_DIR} \
 && rm /tmp/Miniforge3.sh 
RUN conda config --system --set auto_update_conda false \
 && conda config --system --set show_channel_urls true 
# make sure it uses bash or the substitutions will not work
SHELL ["/bin/bash", "-c"]
RUN /bin/bash -c echo "conda ${MINIFORGE_VERSION:0:-2}" >> ${CONDA_DIR}/conda-meta/pinned \
 && echo "python ${PYTHON_VERSION}" >> ${CONDA_DIR}/conda-meta/pinned 
RUN conda install -y -q \
    python=${PYTHON_VERSION} \
    conda=${MINIFORGE_VERSION:0:-2} \
    pip=${PIP_VERSION} 
RUN conda update -y -q --all \
 && conda clean -a -f -y \
 && chown -R ${NB_USER}:users ${CONDA_DIR} \
 && chown -R ${NB_USER}:users ${HOME}

# install - requirements.txt
#COPY --chown=jovyan:users requirements.txt /tmp
#RUN python3 -m pip install -r /tmp/requirements.txt --quiet --no-cache-dir \
# && rm -f /tmp/requirements.txt \
# && chown -R ${NB_USER}:users ${CONDA_DIR} \
# && chown -R ${NB_USER}:users ${HOME}

# should not need codeserver stuff
# s6 - copy scripts
COPY --chown=jovyan:users s6/ /etc
# there's nothing that should stop jupyterlab from working here

# Check for a specific Python version and raise an error if it doesn't match
#RUN \
#    python -c "\
#import sys; \
#version_info = sys.version_info[:3]; \
#expected_version = (3, 9, 2); \
#assert version_info == expected_version, \
#    f'Unexpected Python version: {version_info}, expected: {expected_version}'\
#    "
RUN pip install jupyterlab==3.0.16 notebook==6.4.0 jupyter-client==6.1.12 Jinja2==3.0.1 \
 ipykernel==5.5.5 jedi==0.18.0 jupyter-core==4.7.1 jupyter-server==1.8.0 anyio==3.1.0
# s6 - 01-copy-tmp-home
USER root
RUN mkdir -p /tmp_home \
 && cp -r ${HOME} /tmp_home \
 && chown -R ${NB_USER}:users /tmp_home
USER ${NB_UID}

EXPOSE 8888

ENTRYPOINT ["/init"]


